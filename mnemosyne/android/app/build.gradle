apply plugin: 'com.android.application'

android {
    compileSdkVersion 33
    ndkVersion '25.1.8937393'

    def versionMajor = 2
    def versionMinor = 7
    def versionPatch = 0

    defaultConfig {
        applicationId "org.mnemosyne"
        versionCode versionMajor*10000 + versionMinor*100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        minSdkVersion 26
        targetSdkVersion 33
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_STL=c++_static'
            }
        }

        // We don't use splits because we want to use different assets per abi.
        // 64 bit version should have a higher version code than 32 bit, as the
        // app store automatically serves the highest eligible version number.
        flavorDimensions 'abi'
        productFlavors {
            armeabi_v7a {
                dimension 'abi'
                ndk.abiFilter 'armeabi-v7a'
                versionCode = 1
                versionNameSuffix "-arm32"
            }
            arm64_v8a {
                dimension 'abi'
                ndk.abiFilter 'arm64-v8a'
                versionCode = 2
                versionNameSuffix "-arm64"
            }
            x86 {
                dimension 'abi'
                ndk.abiFilter 'x86'
                versionCode = 3
                versionNameSuffix "-x86"
            }
            x86_64 {
                dimension 'abi'
                ndk.abiFilter 'x86_64'
                versionCode = 4
                versionNameSuffix "-x86-64"
            }
        }
    }

    buildTypes {
        release {
            // Make sure Gradle does not strip our dynamic Python routines.
            minifyEnabled false
            shrinkResources false
        }
    }

    sourceSets {
        main {
            // Let gradle pack the Python libraries into the apk.
            jniLibs.srcDirs = ['../dependencies/python/lib']
        }
    }

    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }

    dependencies {
        implementation 'androidx.appcompat:appcompat:1.6.1'
    }
    namespace 'org.mnemosyne'
}

dependencies {
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
}

// Make sure each abi has a different version code
android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        def abiVersion = variant.productFlavors.get(0).versionCode
        output.versionCodeOverride = abiVersion * 1000000 + android.defaultConfig.versionCode
    }
}
